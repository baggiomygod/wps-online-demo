<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <!-- 建议禁用外框浏览器自带的缩放 -->
  <meta name="viewport"
        content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0,user-scalable=no" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>WPS Web Office(iframe)接入指南</title>
  <style>
    * {
      box-sizing: border-box;
    }

    html,
    body {
      display: flex;
      flex-direction: column;
      padding: 0;
      margin: 0;
      height: 100%;
      /* 防止双击缩放 */
      touch-action: manipulation;
    }

    iframe {
      flex: 1;
    }
  </style>
</head>

<body>

</body>
<script src="javascripts/jwps.js"></script>
  <script type="text/javascript">
    // 支持 HTTPS
    // 注意：如果通过postMessage来设置token，请在url参数加上_w_hastoken=1
    window.onload = () => {

      let wps
      let expiresIn
      const curFile = document.location.search.match(/file=(.+)/)[1]

      const wpsConfig = async () => {
        const res = await fetch(`/getUrlAndToken?_w_fname=${curFile}`) // getToken -> expires_in
        const data = await res.json()
        expiresIn = data.expires_in

        wps = WPS.config({
          mount: document.querySelector('body'),
          // 文字
          wpsUrl: data.wpsUrl,
          headers: {
            shareBtn: {
              tooltip: '分享',
              subscribe() {
                alert('分享')
              }
            },
            otherMenuBtn: {
              tooltip: '其他按钮',
              items: [
                {
                  // 自定义, type 固定填 'custom'
                  type: 'custom',
                  icon: 'http://ep.wps.cn/index/images/logo_white2.png',
                  text: 'API 导出 PDF',
                  async subscribe(wps) {
                    let result
                    if (wps.WpsApplication) {
                      result = await wps.WpsApplication().ActiveDocument.ExportAsFixedFormatAsync()
                      console.table(result)
                      alert(result.url)
                    }
                  }
                }
              ]
            }
          }
        })
        wps.setToken({token: data.token})

        // 更新 token
        setInterval(async () => {
          const res = await fetch(`/getUrlAndToken?_w_fname=${curFile}`) // getToken
          const data = await res.json()
          wps.setToken({token: data.token})
        }, (expiresIn - 60) * 1000)

      }

      wpsConfig()

    }
  </script>
</html>
